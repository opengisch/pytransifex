name: test pytransifex

concurrency: testing_environment

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  workflow_dispatch:
  workflow_call:


jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      # Not using strategy.matrix to create multiple jobs
      # as we do NOT want to test with any form of concurrency
      # to avoid 'race conditions' against Transifex

      - name: Check out repository code
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "requirements/*.txt"

      - name: Install project requirements
        run: |
          python -m pip install -U -r requirements/base.txt
          python -m pip install -U -r requirements/dev.txt

      - name: Test API
        env:
          organization: ${{ secrets.ORGANIZATION }}
          tx_token: ${{ secrets.TX_TOKEN }}
        run: |
          TX_TOKEN=$tx_token ORGANIZATION=$organization \
            python -m unittest ./tests/test_api.py

      - name: Test CLI
        env:
          organization: ${{ secrets.ORGANIZATION }}
          tx_token: ${{ secrets.TX_TOKEN }}
        run: |
          TX_TOKEN=$tx_token ORGANIZATION=$organization \
            python -m unittest ./tests/test_cli.py

      - name: Test with a public project
        env:
          organization: ${{ secrets.ORGANIZATION }}
          tx_token: ${{ secrets.TX_TOKEN }}
        run: |
          TX_TOKEN=$tx_token ORGANIZATION=$organization \
            python -m unittest ./tests/test_public_project.py

      - name: Test with Qgisplugin's 'test_translation'
        env:
          organization: ${{ secrets.ORGANIZATION }}
          tx_token: ${{ secrets.TX_TOKEN }}
        run: |
          TX_TOKEN=$tx_token ORGANIZATION=$organization \
            python -m unittest ./tests/test_translation.py
