name: Release

on:
  push:
    tags:
      - "*"
    paths-ignore:
      - docs/**/*

jobs:
  tests:
    name: "Tests"
    uses: ./.github/workflows/test_pytx.yml
    secrets: inherit

  build-python-wheel:
    name: "üêç Python Wheel"
    runs-on: ubuntu-22.04

    steps:
      - name: Get source code
        uses: actions/checkout@v3

      - name: Set version number
        run: |
          VERSION=${GITHUB_REF:-0.0.0}
          VERSION=${VERSION##*/}
          VERSION=$(echo "$VERSION" | cut -d- -f1 )
          sed -i "s/VERSION *=.*$/VERSION = '${VERSION}'/" pytransifex/__init__.py

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "requirements/*.txt"

      - name: Install project requirements
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install -U -r requirements/base.txt
          python -m pip install -U build

      - name: Install project as a package
        run: python -m pip install -e .

      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
          .

      - uses: actions/upload-artifact@v3
        with:
          name: python_wheel
          path: dist/*
          if-no-files-found: error

  release-gh:
    name: "Release on tag üöÄ"
    runs-on: ubuntu-latest
    needs: [build-python-wheel, tests]

    steps:
      - name: Retrieve artifact from Python build
        uses: actions/download-artifact@v3
        with:
          name: python_wheel
          path: dist/

      - name: Create/update release on GitHub
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true
          artifacts: "builds**/*"
          generateReleaseNotes: true
          omitNameDuringUpdate: true
          token: ${{ secrets.GITHUB_TOKEN }}

  release-pypi:
    name: "üêç Release on PyPI"
    runs-on: ubuntu-latest
    needs: [build-python-wheel, tests]

    steps:
      - name: Retrieve artifact from Python build
        uses: actions/download-artifact@v3
        with:
          name: python_wheel
          path: dist/

      - name: Deploy to PyPI
        uses: pypa/gh-action-pypi-publish@master

        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
